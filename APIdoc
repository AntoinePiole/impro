########## Getters ##########
getUserById(String id)
  Gets a single user by its id
 
getLeagueById(String id)
  Gets a single league (including its list of members and their rank in the league) by its id
  
getMatchById(String id)
  Gets a single march (including both lists of members and their role in the match) by its id
  
########## Setters ##########
patchUser(String id, ...)
  Sets a single user by its id
 
patchLeague(String id, ...)
  Sets a single league (including its list of members and their rank in the league), found by its id
  
patchMatch(String id, ...)
  Sets a single march (including both lists of members and their role in the match) by its id
  
########## Constructors ##########
//Users' constructor is signup 
signup(String email, String password, ........)
  Creates a single user
 
makeLeague(String id, String userId...)
  Creates a single league, with one user as its admin
  
makeMatch(String id, String userId...)
  Creates a single match, with one user as its admin 
########## Logging ###########
login(String email, String password)
  login

signout()
  disconnect current user

isAuth()
  check if we are currently connected
  
########## User in a match ##########  
addToMatch(String userId, String matchId, String role, waiting)
  Role can be : "participant1" (player for league1), "participant2"(player for league2), "admin", "referee" or "MC"
  waiting : boolean true if to add in waitingList, false if to accept 

removeFromMatch(String userId, String matchId, String role, waiting)
  Removes an user from a match, same parameters as addToMatch
  
########## User in a league ##########
addToLeague(String userId, String leagueId)
  Adds an user to a league with isAdmin=false

removeFromLeague(String userId, String leagueId)
  Removes an user from a league
  
setRoleInLeague(String userId, String leagueId, String role)
  Role can be : user or admin
  
########## Search ##########
searchUser(String queryText)
  Search in the User database
  
searchMatch(String queryText)
  Search in the Match database
  
searchLeague(String queryText)
  Search in the League database
  
########## Match requests ##########
postMatchRequest(String league1Id, String league2Id, Date date, String location)
  Post a match request from league 1 to league 2. Store it as a proposition in league 2, and a suggestion in match 1
  
refuseMatchRequest(String league1Id, String league2Id, Date date, String location)
  Refuse a match. Remove it from both the propositions of league 2 and the suggestions of league 1

acceptMatchRequest(String league1Id, String league2Id, Date date, String location)
  Accept a match. Remove it from propositions and suggestions, and create a new page for the match.

########## ##########
